basePath: /
definitions:
  request.CreateTask:
    properties:
      deadline_at:
        type: integer
      description:
        minLength: 3
        type: string
      title:
        minLength: 3
        type: string
    required:
    - deadline_at
    - description
    - title
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 4
        type: string
    type: object
  response.AuthResponse:
    properties:
      jwt:
        type: string
      user:
        $ref: '#/definitions/response.User'
    type: object
  response.TaskResponse:
    properties:
      abandoned_at:
        type: integer
      completed_at:
        type: integer
      created_at:
        type: integer
      deadline_at:
        type: integer
      description:
        type: string
      id:
        type: string
      started_at:
        type: integer
      status:
        type: integer
      title:
        type: string
      user_id:
        type: string
    type: object
  response.User:
    properties:
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Aestimatio API-Gateway.
  license:
    name: MIT
  title: Aestimatio API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      operationId: Auth-Login
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AuthResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      operationId: Auth-Register
      parameters:
      - description: New User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AuthResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Register
      tags:
      - auth
  /tasks:
    post:
      consumes:
      - application/json
      operationId: Task-Create
      parameters:
      - description: New Task Data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/request.CreateTask'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TaskResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create Task
      tags:
      - task
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      operationId: Task-Delete
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete Task
      tags:
      - task
    get:
      consumes:
      - application/json
      operationId: Task-Get
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TaskResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get Task
      tags:
      - task
    put:
      consumes:
      - application/json
      operationId: Task-Switch
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Status
        in: query
        name: switch
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TaskResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Switch Task Status
      tags:
      - task
  /tasks/list:
    get:
      consumes:
      - application/json
      operationId: Task-List
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.TaskResponse'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: List Tasks
      tags:
      - task
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
